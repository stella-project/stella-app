name: Python application

on: [push]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov genbadge[coverage]
        if [ -f web/requirements.txt ]; then pip install -r web/requirements.txt; fi
    
    - name: Run tests with coverage
      run: |
          pytest --cov=web --cov-report=html --cov-report=xml --cov-report=json:coverage-files.json
    
    - name: Generate coverage badge
      if: matrix.python-version == '3.10'
      run: |
        mkdir -p htmlcov
        genbadge coverage -i coverage.xml -o htmlcov/coverage-badge.svg

        COVERAGE=$(python -c "import xml.etree.ElementTree as ET; tree = ET.parse('coverage.xml'); root = tree.getroot(); print(f\"{float(root.attrib['line-rate']) * 100:.1f}\")")
        echo "{\"schemaVersion\": 1, \"label\": \"coverage\", \"message\": \"${COVERAGE}%\"}" > htmlcov/coverage-badge.json

    - name: Upload Pages artifact
      if: matrix.python-version == '3.10' && github.ref == 'refs/heads/docs/shields'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./htmlcov

  deploy:
    if: github.ref == 'refs/heads/docs/shields'
    needs: build
    runs-on: ubuntu-latest
    
    permissions:
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
